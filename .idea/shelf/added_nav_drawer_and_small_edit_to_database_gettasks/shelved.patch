Index: app/src/main/java/com/example/doug/checklistpresentlayer/ListClass.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.doug.checklistpresentlayer\r\nimport kotlin.concurrent.thread\r\nimport khttp.*\r\n\r\ndata class ListClass (var i_name: String, var error : String?) : ListTaskBase(i_name, \"Checklist\", true) {\r\n    val p_key = Int\r\n    fun PostObject(uID : Int)\r\n    {\r\n        //val payload = mapOf(\"Name\" to i_name)\r\n        thread() {\r\n            val post1 = post(\"https://api20190207120410.azurewebsites.net/api/checklist/\" + uID.toString(), data = mapOf(\"Name\" to i_name))\r\n            println(post1.statusCode)\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/doug/checklistpresentlayer/ListClass.kt	(revision f1ee1a44bda17cbe4ce1b1f23240c3cbfe339982)
+++ app/src/main/java/com/example/doug/checklistpresentlayer/ListClass.kt	(date 1552545607098)
@@ -3,7 +3,7 @@
 import khttp.*
 
 data class ListClass (var i_name: String, var error : String?) : ListTaskBase(i_name, "Checklist", true) {
-    val p_key = Int
+    var p_key: Int = 0
     fun PostObject(uID : Int)
     {
         //val payload = mapOf("Name" to i_name)
Index: app/src/main/java/com/example/doug/checklistpresentlayer/BaseListofLists.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/***************\r\n * note: most of this code is Emmetts\r\n */\r\npackage com.example.doug.checklistpresentlayer\r\n\r\nimport android.content.Intent\r\nimport khttp.*\r\nimport android.graphics.Color\r\nimport android.os.Bundle\r\nimport android.support.v7.app.ActionBar\r\nimport android.support.v7.app.AppCompatActivity\r\nimport android.support.v7.widget.Toolbar\r\nimport android.view.Gravity\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.*\r\nimport kotlinx.android.synthetic.main.activity_base_checklist.*\r\nimport kotlinx.android.synthetic.main.history_popup.view.*\r\nimport kotlinx.android.synthetic.main.popup_layout.view.*\r\nimport kotlinx.android.synthetic.main.task_functions_layout.view.*\r\nimport android.support.v4.widget.DrawerLayout\r\nimport android.support.design.widget.NavigationView\r\nimport android.support.v4.view.GravityCompat\r\nimport android.support.v7.widget.RecyclerView\r\nimport android.view.MenuItem\r\nimport android.widget.*\r\nimport kotlinx.android.synthetic.main.activity_base_checklist.*\r\nimport kotlinx.android.synthetic.main.history_popup.view.*\r\nimport kotlinx.android.synthetic.main.popup_layout.view.*\r\nimport kotlinx.android.synthetic.main.task_functions_layout.view.*\r\n\r\n\r\nclass BaseListofLists : AppCompatActivity(){\r\n\r\n    var UName = \"\"\r\n    var FName = \"\"\r\n    var LName = \"\"\r\n    var currentListofLists = ListofLists(\"Your CheckLists\", \"none\")\r\n    //Flag to see if any popups are present\r\n    var popupPresent = false\r\n\r\n    var currentTask: TaskBox? = null\r\n\r\n    private lateinit var drawerLayout: DrawerLayout\r\n\r\n    //Intialize things here\r\n    init {\r\n\r\n\r\n    }\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_base_listoflists)\r\n        currentListofLists.setuId(intent.getIntExtra(\"UserID\", 0))\r\n        var db = Database(intent.getStringExtra(\"uname\"))\r\n        currentListofLists.lists = db.GetListofLists()\r\n        //Get layout of checklist names\r\n        val taskLayout = findViewById<LinearLayout>(R.id.TaskLayout)\r\n        var tempBox: ListBox\r\n\r\n        for (ListClass in currentListofLists.lists) {\r\n            //Fill box with checklist name\r\n            tempBox = ListBox(\r\n                this,\r\n                ListClass.i_name\r\n            )\r\n\r\n            //Set The action to be executed when the list in clicked\r\n            tempBox.setOnClickListener{\r\n                val tempIntent = Intent(this, BaseChecklist::class.java).apply {\r\n                    putExtra(\"ListName\", ListClass.i_name)\r\n                }\r\n\r\n                //Start the BaseChecklist Activity\r\n                startActivity(tempIntent)\r\n            }\r\n\r\n            //Add box to page\r\n            taskLayout.addView(tempBox)\r\n        }\r\n        UName = intent.getStringExtra(\"uname\")\r\n        FName = intent.getStringExtra(\"fname\")\r\n        LName = intent.getStringExtra(\"lname\")\r\n\r\n        drawerLayout = findViewById(R.id.drawer_layout)\r\n\r\n        val toolbar: Toolbar = findViewById(R.id.toolbar)\r\n        setSupportActionBar(toolbar)\r\n        val actionbar: ActionBar? = supportActionBar\r\n        actionbar?.apply {\r\n            setDisplayHomeAsUpEnabled(true)\r\n            setHomeAsUpIndicator(R.drawable.ic_menu_black_24dp)\r\n        }\r\n\r\n        val navigationView: NavigationView = findViewById(R.id.nav_view)\r\n        navigationView.setNavigationItemSelectedListener { menuItem ->\r\n            // set item as selected to persist highlight\r\n            menuItem.isChecked = true\r\n            onOptionsItemSelected(menuItem)\r\n            // close drawer when item is tapped\r\n            drawerLayout.closeDrawers()\r\n            // Add code here to update the UI based on the item selected\r\n            // For example, swap UI fragments here\r\n\r\n            true\r\n        }\r\n\r\n        val addButton = findViewById<Button>(R.id.AddListButton)\r\n\r\n        val addListener = View.OnClickListener {\r\n\r\n            if(!popupPresent) {\r\n\r\n                val mainView = findViewById<ScrollView>(R.id.TaskScrollView)\r\n\r\n                val popupWindow = PopupWindow(this)\r\n\r\n                val popupView = layoutInflater.inflate(R.layout.popup_layout, null)\r\n                popupView.PopupEditText.hint = \"Enter List Name\"\r\n\r\n                popupWindow.contentView = popupView\r\n\r\n                val acceptButton = popupView.PopupMainView.AcceptButton\r\n\r\n                //Creates and adds the on click action to the add button\r\n                acceptButton.setOnClickListener{\r\n\r\n\r\n                        val popup_edittext = popupView.PopupMainView.PopupEditText\r\n\r\n                        val taskLayout = findViewById<LinearLayout>(R.id.TaskLayout)\r\n\r\n                        if (popup_edittext.text.toString().length >= 1) {\r\n                            var new_list_box = ListBox(\r\n                                this,\r\n                                popup_edittext.text.toString()\r\n                            )\r\n\r\n                            currentListofLists.createList(popup_edittext.text.toString(),\r\n                                User(intent.getIntExtra(\"UserID\", 0)))/*, intent.getStringExtra(\"uname\"),\r\n                                     intent.getStringExtra(\"fname\"), intent.getStringExtra(\"lname\")))*/\r\n\r\n                            popupWindow.dismiss()\r\n\r\n                            popupWindow.setOnDismissListener { PopupWindow.OnDismissListener {\r\n                                popupPresent = false\r\n                            } }\r\n\r\n                            val popupFunctionWindow = PopupWindow(this)\r\n\r\n                            val taskFunctionLayoutView =\r\n                                layoutInflater.inflate(R.layout.task_functions_layout, null)\r\n\r\n                            popupFunctionWindow.contentView = taskFunctionLayoutView\r\n\r\n                            val DeleteButton = taskFunctionLayoutView.FunctionDeleteButton\r\n\r\n                            val CloseButton = taskFunctionLayoutView.FunctionCloseButton\r\n\r\n                            val CloseListener = View.OnClickListener {\r\n                                popupFunctionWindow.dismiss()\r\n\r\n                                popupPresent = false\r\n                            }\r\n\r\n                            val DeleteListener = View.OnClickListener {\r\n                                for(i in TaskLayout.childCount downTo 0 step 1)\r\n                                {\r\n                                    val tempChild = TaskLayout.getChildAt(i)\r\n                                    if(tempChild is TaskBox)\r\n                                    {\r\n                                        if(tempChild.getTaskText() == currentTask?.getTaskText())\r\n                                        {\r\n                                            TaskLayout.removeView(TaskLayout.getChildAt(i))\r\n                                            currentListofLists.deleteList(i, User(1));\r\n                                        }\r\n                                    }\r\n                                }\r\n\r\n                                popupFunctionWindow.dismiss()\r\n\r\n                                popupPresent = false\r\n                            }\r\n\r\n                            popupFunctionWindow.contentView = taskFunctionLayoutView\r\n\r\n                            DeleteButton.setOnClickListener(DeleteListener)\r\n\r\n                            CloseButton.setOnClickListener(CloseListener)\r\n\r\n                            popupFunctionWindow.setOnDismissListener {\r\n                                PopupWindow.OnDismissListener {\r\n                                    popupPresent = false\r\n                                }\r\n                            }\r\n\r\n                            new_list_box.setOnClickListener{\r\n                                val tempIntent = Intent(this, BaseChecklist::class.java).apply {\r\n                                    putExtra(\"ListName\", popup_edittext.text.toString())\r\n                                    putExtra(\"UserName\", UName)\r\n                                }\r\n                                startActivity(tempIntent)\r\n                            }\r\n\r\n                            taskLayout.addView(new_list_box)\r\n                        }\r\n                }\r\n\r\n                val cancelButton = popupView.PopupMainView.CancelButton\r\n\r\n                cancelButton.setOnClickListener{\r\n\r\n                    popupWindow.dismiss()\r\n\r\n                }\r\n\r\n                popupWindow.setOnDismissListener{\r\n                    val popupEdittext = popupView.PopupMainView.PopupEditText\r\n\r\n                    popupEdittext.text.clear()\r\n\r\n                    popupPresent = false\r\n                }\r\n\r\n                popupWindow.isFocusable = true\r\n\r\n                popupWindow.showAtLocation(mainView, Gravity.CENTER, 0, 0)\r\n\r\n                popupPresent = true\r\n\r\n            }\r\n        }\r\n\r\n        addButton.setOnClickListener(addListener)\r\n    }\r\n    override fun onOptionsItemSelected(item: MenuItem): Boolean {\r\n        return when (item.itemId) {\r\n            android.R.id.home -> {\r\n                drawerLayout.openDrawer(GravityCompat.START)\r\n                true\r\n            }\r\n            R.id.dProfile -> {\r\n                val tempIntent = Intent(this, UserLogin::class.java).apply {\r\n                    putExtra(\"uname\", UName)\r\n                    putExtra(\"fname\", FName)\r\n                    putExtra(\"lname\", LName)\r\n                }\r\n                startActivity(tempIntent)\r\n                true\r\n            }\r\n            R.id.dSettings -> {\r\n                true\r\n            }\r\n            R.id.dLogOut -> {\r\n                true\r\n            }\r\n            else -> super.onOptionsItemSelected(item)\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/doug/checklistpresentlayer/BaseListofLists.kt	(revision f1ee1a44bda17cbe4ce1b1f23240c3cbfe339982)
+++ app/src/main/java/com/example/doug/checklistpresentlayer/BaseListofLists.kt	(date 1552545607112)
@@ -1,5 +1,5 @@
 /***************
- * note: most of this code is Emmetts
+ * note: most of this code is Emmett's
  */
 package com.example.doug.checklistpresentlayer
 
@@ -69,7 +69,11 @@
             //Set The action to be executed when the list in clicked
             tempBox.setOnClickListener{
                 val tempIntent = Intent(this, BaseChecklist::class.java).apply {
-                    putExtra("ListName", ListClass.i_name)
+                    putExtra("listid", ListClass.p_key)
+                    putExtra("uname", intent.getStringExtra("uname"))
+                    putExtra("fname", intent.getStringExtra("fname"))
+                    putExtra("lname", intent.getStringExtra("lname"))
+                    putExtra("UserID",intent.getIntExtra("UserID", 0))
                 }
 
                 //Start the BaseChecklist Activity
