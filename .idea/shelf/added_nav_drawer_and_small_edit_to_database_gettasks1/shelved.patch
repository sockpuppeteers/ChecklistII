Index: app/src/main/java/com/example/doug/checklistpresentlayer/Database.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.doug.checklistpresentlayer\r\n\r\nimport okhttp3.*\r\nimport java.io.IOException\r\nimport java.util.*\r\n\r\n\r\nclass Database( var uName: String ) {\r\n\r\n    var body: String? = \"\"\r\n\r\n    fun LogIn(Password: String) : UserPage//used only to login\r\n    {\r\n        var user = UserPage(0,\"\",\"\",\"\", \"\")\r\n        FetchJsonLogin(Password)\r\n        while (body == \"\"){}\r\n        if (body == \"failed\" || body == \"{\\\"Message\\\":\\\"username or password is wrong dude\\\"}\" || body == \"{\\\"Message\\\":\\\"An error has occurred.\\\"}\") {\r\n            user = UserPage(0,\"\",\"\",\"\", body)\r\n        }\r\n        else {\r\n            var seprate: List<String>? = body?.split(\"[\", \"]\", \"{\", \"}\", \"\\\"\", \":\", \",\")?.filter { it.isNotBlank() }\r\n\r\n            if (seprate != null) {\r\n                var i = 0\r\n                var UID = 0\r\n                var UN = \"\"\r\n                var FN = \"\"\r\n                var LN = \"\"\r\n                for (item in seprate) {\r\n                    if (i == 0) {\r\n                        if (item == \"UserID\") {\r\n                            i = 1\r\n                        }\r\n                        if (item == \"Username\") {\r\n                            i = 2\r\n                        }\r\n                        if (item == \"FName\") {\r\n                            i = 3\r\n                        }\r\n                        if (item == \"Lname\") {\r\n                            i = 4\r\n                        }\r\n                    } else {\r\n                        if (i == 1) {\r\n                            UID = item.toInt()\r\n                            i = 0\r\n                        } else if (i == 2) {\r\n                            UN = item\r\n                            i = 0\r\n                        } else if (i == 3) {\r\n                            FN = item\r\n                            i = 0\r\n                        } else if (i == 4) {\r\n                            LN = item\r\n                            i = 0\r\n                            user = UserPage(UID, UN, FN, LN, \"none\")\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return user\r\n    }\r\n    fun GetListofLists() : MutableList<ListClass>//returns all lists user has access to\r\n    {\r\n        var LoL = mutableListOf<ListClass>()\r\n        if (body == \"\")\r\n            FetchJsonUser()\r\n        while (body == \"\"){}\r\n        if (body == \"failed\" || body == \"{\\\"Message\\\":\\\"An error has occurred.\\\"}\") {\r\n            LoL.add(ListClass(\"\", body))\r\n        }\r\n        else {\r\n            var seprate: List<String>? = body?.split(\"[\", \"]\", \"{\", \"}\", \":\", \",\")?.filter { it.isNotBlank() }\r\n\r\n            if (seprate != null) {\r\n                var found_us = false\r\n                var i = 0\r\n                var x = 0\r\n                var name = \"\"\r\n                var id = 0\r\n                for (item in seprate) {\r\n                    if (i == 0) {\r\n                        if (item == \"\\\"Checklists\\\"\" || item == \"\\\"Changes\\\"\") {\r\n                            i = 1\r\n                        }\r\n                    }\r\n                    else if (i == 1) {\r\n                        if (item == \"\\\"Users\\\"\" && found_us)\r\n                        {\r\n                            i = 2\r\n                        }\r\n                        else if (item == \"\\\"Users\\\"\" && !found_us)\r\n                        {\r\n                            found_us = true\r\n                        }\r\n                    }\r\n                    else if (i == 2)\r\n                    {\r\n                        if (item == \"\\\"ChecklistID\\\"\" && x == 0)\r\n                        {\r\n                            x = 1\r\n                        }\r\n                        else if (x == 1)\r\n                        {\r\n                            id = item.toInt()\r\n                            x = 0\r\n                        }\r\n                        if (item == \"\\\"Name\\\"\" && x == 0)\r\n                        {\r\n                            x = 2\r\n                        }\r\n                        else if (x == 2)\r\n                        {\r\n                            name = item.drop(1)\r\n                            name = name.dropLast(1)\r\n                            val temp = ListClass(name, \"none\")\r\n                            temp.p_key = id\r\n                            LoL.add(temp)\r\n                            x = 0\r\n                            i = 0\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return LoL\r\n    }\r\n//    {\"Changes\":[],\"Notes\":[],\"Notes1\":[],\"Tasks\":[],\"Users1\":[],\"Users\":[],\"Groups\":[],\"Checklists\":[{\"Changes\":[],\"Tasks\":\r\n//        [{\"Changes\":[],\"User\":null,\"TaskID\":8,\"ChecklistID\":7,\"Name\":\"Task 1\",\"Description\":null,\"HasDeadline\":false,\"Deadline\":null,\"Completed\":false,\"DateCompleted\":null,\"CompletedBy\":null},\r\n//            {\"Changes\":[],\"User\":null,\"TaskID\":9,\"ChecklistID\":7,\"Name\":\"Task 2\",\"Description\":null,\"HasDeadline\":false,\"Deadline\":null,\"Completed\":false,\"DateCompleted\":null,\"CompletedBy\":null},\r\n//            {\"Changes\":[],\"User\":null,\"TaskID\":10,\"ChecklistID\":7,\"Name\":\"Task 3\",\"Description\":null,\"HasDeadline\":false,\"Deadline\":null,\"Completed\":false,\"DateCompleted\":null,\"CompletedBy\":null},\r\n//            {\"Changes\":[],\"User\":null,\"TaskID\":11,\"ChecklistID\":7,\"Name\":\"Task 4\",\"Description\":null,\"HasDeadline\":false,\"Deadline\":null,\"Completed\":false,\"DateCompleted\":null,\"CompletedBy\":null},\r\n//            {\"Changes\":[],\"User\":null,\"TaskID\":12,\"ChecklistID\":7,\"Name\":\"Task 5\",\"Description\":null,\"HasDeadline\":false,\"Deadline\":null,\"Completed\":false,\"DateCompleted\":null,\"CompletedBy\":null},\r\n//            {\"Changes\":[],\"User\":null,\"TaskID\":13,\"ChecklistID\":7,\"Name\":\"Task 6\",\"Description\":null,\"HasDeadline\":false,\"Deadline\":null,\"Completed\":false,\"DateCompleted\":null,\"CompletedBy\":null},\r\n//            {\"Changes\":[],\"User\":null,\"TaskID\":14,\"ChecklistID\":7,\"Name\":\"Unite the Koreas\",\"Description\":null,\"HasDeadline\":false,\"Deadline\":null,\"Completed\":false,\"DateCompleted\":null,\"CompletedBy\":null},\r\n//            {\"Changes\":[],\"User\":null,\"TaskID\":15,\"ChecklistID\":7,\"Name\":\"Task 8\",\"Description\":null,\"HasDeadline\":false,\"Deadline\":null,\"Completed\":false,\"DateCompleted\":null,\"CompletedBy\":null},\r\n//            {\"Changes\":[],\"User\":null,\"TaskID\":16,\"ChecklistID\":7,\"Name\":\"Task 9\",\"Description\":null,\"HasDeadline\":false,\"Deadline\":null,\"Completed\":false,\"DateCompleted\":null,\"CompletedBy\":null},\r\n//            {\"Changes\":[],\"User\":null,\"TaskID\":17,\"ChecklistID\":7,\"Name\":\"Task 10\",\"Description\":null,\"HasDeadline\":false,\"Deadline\":null,\"Completed\":false,\"DateCompleted\":null,\"CompletedBy\":null},\r\n//            {\"Changes\":[],\"User\":null,\"TaskID\":18,\"ChecklistID\":7,\"Name\":\"Task 11\",\"Description\":null,\"HasDeadline\":false,\"Deadline\":null,\"Completed\":false,\"DateCompleted\":null,\"CompletedBy\":null},\r\n//            {\"Changes\":[],\"User\":null,\"TaskID\":19,\"ChecklistID\":7,\"Name\":\"Task 12\",\"Description\":null,\"HasDeadline\":false,\"Deadline\":null,\"Completed\":false,\"DateCompleted\":null,\"CompletedBy\":null}],\r\n//        \"Users\":[{\"Changes\":[],\"Notes\":[],\"Notes1\":[],\"Tasks\":[],\"Users1\":[],\"Users\":[],\"Groups\":[],\"Checklists\":[{\"Changes\":[],\"Tasks\":[],\"Users\":[],\"ChecklistID\":8,\"Name\":\"Second Checklist\"}],\r\n//            \"UserID\":100000000,\"Username\":\"admin\",\"FName\":\"newName\",\"Lname\":\"rogers\",\"pw\":\"\"},\r\n//        {\"Changes\":[],\"Notes\":[],\"Notes1\":[],\"Tasks\":[],\"Users1\":[],\"Users\":[],\"Groups\":[],\"Checklists\":[],\"UserID\":100000009,\"Username\":\"hashTest2\",\"FName\":\"joe\",\"Lname\":\"rogan\",\"pw\":\"\"}],\r\n//        \"ChecklistID\":7,\"Name\":\"Best Checklist\"},{\"Changes\":[],\"Tasks\":[],\"Users\":[],\"ChecklistID\":9,\"Name\":\"test\"}],\r\n//        \"UserID\":100000011,\"Username\":\"hashTestInfinity\",\"FName\":\"Billy\",\"Lname\":\"Mays\",\"pw\":\"\"}\r\n\r\n    fun GetTasks(ID: Int) : MutableList<Task>//returns list of tasks for a list at ID on the database\r\n    {\r\n        var LoL = mutableListOf<Task>()\r\n        if (body == \"\")\r\n            FetchJsonUser()\r\n        while (body == \"\"){}\r\n        if (body == \"failed\" || body == \"{\\\"Message\\\":\\\"An error has occurred.\\\"}\") {\r\n            val t = Task(\"\",\"\",\"\")\r\n            t.error = body\r\n            LoL.add(t)\r\n        }\r\n        else {\r\n            var seprate: List<String>? = body?.split(\"[\", \"]\", \"{\", \"}\", \":\", \",\")?.filter { it.isNotBlank() }\r\n\r\n            if (seprate != null) {\r\n                var i = 0\r\n                var x = 0\r\n                var y = 0\r\n                var z = 0\r\n                var name = \"\"\r\n                var dis = \"\"\r\n                var dl = \"\"\r\n                var currentlist = 0\r\n                for (item in seprate) {\r\n                    if (i == 0) {\r\n                        if (item == \"\\\"Checklists\\\"\" || item == \"\\\"Changes\\\"\")\r\n                        {//finds the start of a list, skipping user\r\n                            i = 9\r\n                        }\r\n                    }\r\n                    else if (i == 9) {\r\n                        if (z == 1)\r\n                        {\r\n                            z = 0\r\n                            if (item.toInt() == ID)\r\n                            {\r\n                                i = 1\r\n                            }\r\n                            else\r\n                            {\r\n                                i = 11\r\n                                currentlist = item.toInt()\r\n                            }\r\n                        }\r\n                        if (item == \"ChecklistID\") {\r\n                            z = 1\r\n                        }\r\n                    }\r\n                    else if (i == 11)\r\n                    {\r\n                        if (item == \"\\\"Users\\\"\")\r\n                        {\r\n                            i = 12\r\n                        }\r\n                    }\r\n                    else if (i == 12)\r\n                    {\r\n                        if (z == 1)\r\n                        {\r\n                            z = 0\r\n                            if (item.toInt() == currentlist)\r\n                            {\r\n                                i = 1\r\n                            }\r\n                            else\r\n                            {\r\n                                i = 9\r\n                            }\r\n                        }\r\n                        if (item == \"ChecklistID\") {\r\n                            z = 1\r\n                        }\r\n                    }\r\n                    else if (i == 1) {\r\n                        if (item == \"\\\"Name\\\"\")\r\n                        {\r\n                            i = 2\r\n                        }\r\n                        if (item == \"\\\"Description\\\"\")\r\n                        {\r\n                            i = 2\r\n                            x = 1\r\n                        }\r\n                        if (item == \"\\\"HasDeadline\\\"\") {\r\n                            i = 2\r\n                            x = 2\r\n                        }\r\n                    }\r\n                    else if (i == 2)\r\n                    {\r\n                        if (x == 0)\r\n                        {\r\n                            name = item.drop(1)//all items have \"\", these lines get rid of them\r\n                            name = name.dropLast(1)\r\n                            i = 1\r\n                        }\r\n                        else if (x == 1) {\r\n                            if (item != \"null\") {\r\n                                dis = item.drop(1)\r\n                                dis = dis.dropLast(1)\r\n                            } else {\r\n                                dis = \"\"\r\n                            }\r\n                            i = 1\r\n                        }\r\n                        else if (x == 2) {\r\n                            if (item == \"false\") {\r\n                                x = 4\r\n                            } else if (item == \"\\\"Deadline\\\"\") {\r\n                                x = 3\r\n                            }\r\n                        }\r\n                        else if (x == 3)\r\n                        {\r\n                            dl = item.drop(1)\r\n                            dl = dl.dropLast(1)\r\n                            x = 4\r\n                        }\r\n                        else if (x == 4) {\r\n                            val t = Task(name, dis, dl)\r\n                            t.error = \"none\"\r\n                            LoL.add(t)\r\n                            x = 0\r\n                            i = 0\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (LoL.isEmpty())//checks if we found list. if not adds an error to list.\r\n        {\r\n            val t = Task(\"\", \"\", \"\")\r\n            t.error = \"List is not in users lists\"\r\n            LoL.add(t)\r\n        }\r\n        return LoL\r\n    }\r\n\r\n    fun RegisterUser(Email: String, FName: String, LName: String, PW1: String, PW2: String) : String\r\n    {\r\n        var error: String = \"\"\r\n        if (PW1 == PW2) {\r\n            FetchJsonUser()\r\n            while (body == \"\"){}\r\n            if (body != \"{\\\"Message\\\":\\\"User with username = \" + uName +\" not found\\\"}\")\r\n                error = \"Username Taken\"\r\n            else if (PW1.length > 16)\r\n                error = \"Password to long\"\r\n            else if (PW1.length < 4)\r\n                error = \"Password to short\"\r\n            else if (!Email.contains('@'))\r\n            {\r\n                error = \"Must be a valid email\"\r\n            }\r\n            else if (PW1.contains(\"([a-z]|[A-Z]|!|-|_|@|#|$|%|&|[0-9])*\".toRegex())) {\r\n                if (!(PW1.contains(\".*([a-z]|[A-Z]).*\".toRegex()))) {\r\n                    error = \"Password must contain a letter\"\r\n                }\r\n                if (!(PW1.contains(\".*[0-9].*\".toRegex()))) {\r\n                    if (error.isEmpty())\r\n                        error = \"Password must contain a number\"\r\n                    else\r\n                        error += \" and a number\"\r\n                }\r\n                if (!(PW1.contains('!') || PW1.contains('-') || PW1.contains('_')\r\n                            || PW1.contains('@') || PW1.contains('#') || PW1.contains('$')\r\n                            || PW1.contains('%') || PW1.contains('&'))\r\n                )\r\n                {\r\n                    if (error.isEmpty())\r\n                        error = \"Password must contain a nonstandard character\"\r\n                    else\r\n                        error += \" and a nonstandard character\"\r\n                }\r\n            }\r\n            else {\r\n                error = \"Password contains an unusable character\"\r\n            }\r\n        }\r\n        else\r\n            error = \"Passwords don't match\"\r\n        return error\r\n    }\r\n\r\n    fun FetchJsonUser()//used whenever we need info for a user\r\n    {\r\n        val url = \"https://api20190207120410.azurewebsites.net/Api/Users/GetString/\" + uName\r\n        val request = Request.Builder().url(url).build()\r\n\r\n        val client = OkHttpClient()\r\n        client.newCall(request).enqueue(object: Callback {\r\n            override fun onFailure(call: Call, e: IOException) {\r\n                println(\"Failed to execute request\")\r\n                body = \"failed\"\r\n            }\r\n\r\n            override fun onResponse(call: Call, response: Response) {\r\n                body = response.body()?.string()\r\n                println(body)\r\n            }\r\n        })\r\n    }\r\n\r\n    fun FetchJsonLogin(password: String)//used for login only\r\n    {\r\n        val url = \"https://api20190207120410.azurewebsites.net/Api/Users/login/\" + uName + '/' + password\r\n        val request = Request.Builder().url(url).build()\r\n\r\n        val client = OkHttpClient()\r\n        client.newCall(request).enqueue(object: Callback {\r\n            override fun onFailure(call: Call, e: IOException) {\r\n                println(\"Failed to execute request\")\r\n                body = \"failed\"\r\n            }\r\n\r\n            override fun onResponse(call: Call, response: Response) {\r\n                body = response.body()?.string()\r\n                println(body)\r\n            }\r\n        })\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/doug/checklistpresentlayer/Database.kt	(revision 9bc5e144fd27171fab54e32208e4ccd9732bf790)
+++ app/src/main/java/com/example/doug/checklistpresentlayer/Database.kt	(date 1552552051366)
@@ -189,7 +189,7 @@
                                 currentlist = item.toInt()
                             }
                         }
-                        if (item == "ChecklistID") {
+                        if (item == "\"ChecklistID\"") {
                             z = 1
                         }
                     }
@@ -214,7 +214,7 @@
                                 i = 9
                             }
                         }
-                        if (item == "ChecklistID") {
+                        if (item == "\"ChecklistID\"") {
                             z = 1
                         }
                     }
@@ -326,6 +326,10 @@
         }
         else
             error = "Passwords don't match"
+        if (error == "")
+        {
+
+        }
         return error
     }
 
